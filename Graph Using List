#include<bits/stdc++.h>
using namespace std;
#define s 100
/*
void printGraph(vector<int> p[], int n)
{
  for(int i=0; i<n;i++)
  {     cout<<i<<"--->";
      for(int j=0; j<p[i].size();j++)
      {
          cout<<p[i][j]<<" ";
 
      }
      cout<< endl;
  }
}
 
 
int main()
{
int node, edge;
 cout<<" give size"<<endl;
cin>>node>>edge;
 
 
//vector<int> *m = new
 
   vector<int> m[7];
 
    int u,v;
    for(int i=0; i<edge;i++)
    {
 
        cin>>u>>v;
        m[u].push_back(v);
        m[v].push_back(u);
    }
    printGraph(m,node);
 
    return 0;
}
 
*/
 
 
 
void countdegre(vector<int> p[], int n)
 {
   int *d = new int[n];
 
 
   for(int i=0; i<n;i++)
        {
            d[i]=0;
 
        }
 
 
        for(int i=0; i<n;i++)
            {
 
                    d[i]=p[i].size();
            }
 
        for(int i=0; i<n;i++)
        {
 
            cout<<i<<"degree"<<d[i]<<endl;
        }
 
 }
 void printGraph(vector<int> p[], int n)
{
  for(int i=0; i<n;i++)
  {     cout<<i<<"--->";
      for(int j=0; j<p[i].size();j++)
      {
          cout<<p[i][j]<<" ";
 
      }
      cout<< endl;
  }
}
 
 
int main()
{
int node, edge;
 cout<<" give size"<<endl;
cin>>node>>edge;
 
 
vector<int> *m = new vector<int> [node];
 
  // vector<int> m[7];
 
    int u,v;
    for(int i=0; i<edge;i++)
    {
 
        cin>>u>>v;
        m[u].push_back(v);
        m[v].push_back(u);
    }
    printGraph(m,node);
    countdegre(m,node);
 
    return 0;
}
 
 
/*
7 10
0 1
0 2
0 3
1 3
2 4
2 5
3 6
3 4
4 5
4 6
*/
 
